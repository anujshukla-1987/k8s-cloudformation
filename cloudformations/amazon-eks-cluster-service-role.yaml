AWSTemplateFormatVersion: "2010-09-09"
Description: "Amazon EKS VPC"

Parameters:
  ClusterServiceRoleName:
    Type: String

Resources:
  ControlPlaneRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: !Ref ClusterServiceRoleName
      Description: "This allows EKS to manage cluster on your behalf"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: eks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEKSClusterPolicy
        - arn:aws:iam::aws:policy/AmazonEKSServicePolicy

  NodeInstanceRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy"
        - "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"
        - "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
      Path: /
      Policies:
        - PolicyName: "logs-iam-policy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
            - Effect: Allow
              Action:
              - logs:DescribeLogGroups
              - logs:DescribeLogStreams
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
              Resource: "*"
        - PolicyName: "externaldns-iam-policy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
            - Effect: Allow
              Action:
              - route53:ChangeResourceRecordSets
              Resource: "arn:aws:route53:::hostedzone/*"
            - Effect: Allow
              Action:
              - route53:ListHostedZones
              - route53:ListResourceRecordSets
              Resource: "*"            
        - PolicyName: "ingressController-iam-policy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
            - Effect: Allow
              Action:
              - acm:DescribeCertificate
              - acm:ListCertificates
              - acm:GetCertificate
              Resource: "*"
            - Effect: Allow
              Action:
              - ec2:AuthorizeSecurityGroupIngress
              - ec2:CreateSecurityGroup
              - ec2:CreateTags
              - ec2:DeleteTags
              - ec2:DeleteSecurityGroup
              - ec2:DescribeInstances
              - ec2:DescribeInstanceStatus
              - ec2:DescribeSecurityGroups
              - ec2:DescribeSubnets
              - ec2:DescribeTags
              - ec2:DescribeVpcs
              - ec2:ModifyInstanceAttribute
              - ec2:ModifyNetworkInterfaceAttribute
              - ec2:RevokeSecurityGroupIngress
              Resource: "*"
            - Effect: Allow
              Action:
              - elasticloadbalancing:AddTags
              - elasticloadbalancing:CreateListener
              - elasticloadbalancing:CreateLoadBalancer
              - elasticloadbalancing:CreateRule
              - elasticloadbalancing:CreateTargetGroup
              - elasticloadbalancing:DeleteListener
              - elasticloadbalancing:DeleteLoadBalancer
              - elasticloadbalancing:DeleteRule
              - elasticloadbalancing:DeleteTargetGroup
              - elasticloadbalancing:DeregisterTargets
              - elasticloadbalancing:DescribeListeners
              - elasticloadbalancing:DescribeLoadBalancers
              - elasticloadbalancing:DescribeLoadBalancerAttributes
              - elasticloadbalancing:DescribeRules
              - elasticloadbalancing:DescribeSSLPolicies
              - elasticloadbalancing:DescribeTags
              - elasticloadbalancing:DescribeTargetGroups
              - elasticloadbalancing:DescribeTargetGroupAttributes
              - elasticloadbalancing:DescribeTargetHealth
              - elasticloadbalancing:ModifyListener
              - elasticloadbalancing:ModifyLoadBalancerAttributes
              - elasticloadbalancing:ModifyRule
              - elasticloadbalancing:ModifyTargetGroup
              - elasticloadbalancing:ModifyTargetGroupAttributes
              - elasticloadbalancing:RegisterTargets
              - elasticloadbalancing:RemoveTags
              - elasticloadbalancing:SetIpAddressType
              - elasticloadbalancing:SetSecurityGroups
              - elasticloadbalancing:SetSubnets
              - elasticloadbalancing:SetWebACL
              Resource: "*"
            - Effect: Allow
              Action:
              - iam:GetServerCertificate
              - iam:ListServerCertificates
              Resource: "*"
            - Effect: Allow
              Action:
              - waf-regional:GetWebACLForResource
              - waf-regional:GetWebACL
              - waf-regional:AssociateWebACL
              - waf-regional:DisassociateWebACL
              Resource: "*"
            - Effect: Allow
              Action:
              - tag:GetResources
              - tag:TagResources
              Resource: "*"
            - Effect: Allow
              Action:
              - waf:GetWebACL
              Resource: "*"
            - Effect: Allow
              Action:
              - route53:ChangeResourceRecordSets              
              Resource: "arn:aws:route53:::hostedzone/*"
            - Effect: Allow
              Action:
              - route53:ListHostedZones
              - route53:ListResourceRecordSets
              Resource: "*"
  
Outputs:
  ControlPlaneRoleArn:
    Value: !GetAtt ControlPlaneRole.Arn